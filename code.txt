<?php
/*
Plugin Name: Custom Product Plugin
Description: Custom plugin to create a Products post type with categories taxonomy, custom metaboxes, and a custom database table.
Version: 1.0
Author: Rahul Kumawat
*/

// Custom Post Type aur Taxonomy banayein
function custom_product_post_type() {
    // Registering Custom Post Type
    register_post_type('products', array(
        'labels' => array(
            'name' => __('Products'),
            'singular_name' => __('Product')
        ),
        'public' => true,
        'has_archive' => true,
        'supports' => array('title', 'editor', 'thumbnail'),
        'menu_position' => 5
    ));

    // Registering Taxonomy
    register_taxonomy('product_categories', 'products', array(
        'labels' => array(
            'name' => __('Categories'),
            'singular_name' => __('Category')
        ),
        'hierarchical' => true,
        'show_ui' => true,
    ));
}
add_action('init', 'custom_product_post_type');

// Metaboxes Add Karna
function add_product_metaboxes() {
    add_meta_box('product_price', 'Price', 'product_price_callback', 'products', 'normal', 'high');
    add_meta_box('product_size', 'Size', 'product_size_callback', 'products', 'normal', 'high');
    add_meta_box('product_type', 'Type', 'product_type_callback', 'products', 'normal', 'high');
}
add_action('add_meta_boxes', 'add_product_metaboxes');

function product_price_callback($post) {
    $price = get_post_meta($post->ID, 'product_price', true);
    echo '<input type="number" name="product_price" value="' . esc_attr($price) . '" />';
}

function product_size_callback($post) {
    $size = get_post_meta($post->ID, 'product_size', true);
    echo '<input type="text" name="product_size" value="' . esc_attr($size) . '" />';
}

function product_type_callback($post) {
    $type = get_post_meta($post->ID, 'product_type', true);
    echo '<input type="text" name="product_type" value="' . esc_attr($type) . '" />';
}

// Data ko save aur custom table mein insert karna
function save_product_meta($post_id) {
    // Meta values ko save karna
    if (isset($_POST['product_price'])) {
        $price = sanitize_text_field($_POST['product_price']);
        update_post_meta($post_id, 'product_price', $price);
    }
    if (isset($_POST['product_size'])) {
        $size = sanitize_text_field($_POST['product_size']);
        update_post_meta($post_id, 'product_size', $size);
    }
    if (isset($_POST['product_type'])) {
        $type = sanitize_text_field($_POST['product_type']);
        update_post_meta($post_id, 'product_type', $type);
    }

    // Custom table me data save karna
    global $wpdb;
    $table_name = $wpdb->prefix . 'product_data';

    // Check karen agar record exist karta hai toh update karen, warna insert karen
    $existing = $wpdb->get_var($wpdb->prepare(
        "SELECT id FROM $table_name WHERE product_id = %d",
        $post_id
    ));

    if ($existing) {
        $wpdb->update(
            $table_name,
            array(
                'price' => $price,
                'size' => $size,
                'type' => $type
            ),
            array('product_id' => $post_id),
            array('%f', '%s', '%s'),
            array('%d')
        );
    } else {
        $wpdb->insert(
            $table_name,
            array(
                'product_id' => $post_id,
                'price' => $price,
                'size' => $size,
                'type' => $type
            ),
            array('%d', '%f', '%s', '%s')
        );
    }
}
add_action('save_post_products', 'save_product_meta');

// Custom Table Create Karna
function create_custom_table() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'product_data';
    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        product_id bigint(20) NOT NULL,
        price float NOT NULL,
        size varchar(50) NOT NULL,
        type varchar(50) NOT NULL,
        PRIMARY KEY  (id)
    ) $charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);
}
register_activation_hook(__FILE__, 'create_custom_table');

// Shortcode Function to Display All Products
function display_products_shortcode() {
    // WP_Query ka use karke products ko retrieve karte hain
    $args = array(
        'post_type' => 'products',
        'posts_per_page' => -1 // Saare posts display karne ke liye -1
    );
    $query = new WP_Query($args);

    // Agar posts available hain toh HTML generate karte hain
    if ($query->have_posts()) {
        $output = '<div class="products-list">';

        while ($query->have_posts()) {
            $query->the_post();
            
            // Product ke metabox values ko retrieve karte hain
            $price = get_post_meta(get_the_ID(), 'product_price', true);
            $size = get_post_meta(get_the_ID(), 'product_size', true);
            $type = get_post_meta(get_the_ID(), 'product_type', true);

            // Ek single product ka HTML layout
            $output .= '<div class="product-item">';
            $output .= '<h2>' . get_the_title() . '</h2>';
            $output .= '<p>' . get_the_content() . '</p>';
            $output .= '<p><strong>Price:</strong> ' . esc_html($price) . '</p>';
            $output .= '<p><strong>Size:</strong> ' . esc_html($size) . '</p>';
            $output .= '<p><strong>Type:</strong> ' . esc_html($type) . '</p>';
            $output .= '</div>';
        }

        $output .= '</div>';
        wp_reset_postdata();
    } else {
        $output = '<p>No products found.</p>';
    }

    return $output;
}
add_shortcode('display_products', 'display_products_shortcode');


// Plugin ke start me session start karna
function start_session() {
    if (!session_id()) {
        session_start();
    }
}
add_action('init', 'start_session');


// Shortcode function to display products with Add to Cart button
function display_products_with_cart_shortcode() {
    $args = array(
        'post_type' => 'products',
        'posts_per_page' => -1
    );
    $query = new WP_Query($args);

    if ($query->have_posts()) {
        $output = '<div class="products-list">';

        while ($query->have_posts()) {
            $query->the_post();
            
            $price = get_post_meta(get_the_ID(), 'product_price', true);
            $size = get_post_meta(get_the_ID(), 'product_size', true);
            $type = get_post_meta(get_the_ID(), 'product_type', true);

            $output .= '<div class="product-item">';
            $output .= '<h2>' . get_the_title() . '</h2>';
            $output .= '<p>' . get_the_content() . '</p>';
            $output .= '<p><strong>Price:</strong> ' . esc_html($price) . '</p>';
            $output .= '<p><strong>Size:</strong> ' . esc_html($size) . '</p>';
            $output .= '<p><strong>Type:</strong> ' . esc_html($type) . '</p>';
            
            // Add to Cart Button
            $output .= '<form method="post">';
            $output .= '<input type="hidden" name="product_id" value="' . get_the_ID() . '">';
            $output .= '<input type="submit" name="add_to_cart" value="Add to Cart">';
            $output .= '</form>';

            $output .= '</div>';
        }

        $output .= '</div>';
        wp_reset_postdata();
    } else {
        $output = '<p>No products found.</p>';
    }

    return $output;
}
add_shortcode('display_products_with_cart', 'display_products_with_cart_shortcode');

// Add product to cart function
function add_product_to_cart() {
    if (isset($_POST['add_to_cart']) && isset($_POST['product_id'])) {
        $product_id = sanitize_text_field($_POST['product_id']);

        // Cart ko session me initialize karna agar nahi hai
        if (!isset($_SESSION['cart'])) {
            $_SESSION['cart'] = array();
        }

        // Product ko cart me add karna
        if (!in_array($product_id, $_SESSION['cart'])) {
            $_SESSION['cart'][] = $product_id;
        }
    }
}
add_action('wp', 'add_product_to_cart');

// Display Cart Shortcode
function display_cart_shortcode() {
    if (!isset($_SESSION['cart']) || empty($_SESSION['cart'])) {
        return '<p>Your cart is empty.</p>';
    }

    $output = '<div class="cart-items">';
    foreach ($_SESSION['cart'] as $product_id) {
        $product = get_post($product_id);
        $price = get_post_meta($product_id, 'product_price', true);
        $size = get_post_meta($product_id, 'product_size', true);
        $type = get_post_meta($product_id, 'product_type', true);

        $output .= '<div class="cart-item">';
        $output .= '<h2>' . $product->post_title . '</h2>';
        $output .= '<p><strong>Price:</strong> ' . esc_html($price) . '</p>';
        $output .= '<p><strong>Size:</strong> ' . esc_html($size) . '</p>';
        $output .= '<p><strong>Type:</strong> ' . esc_html($type) . '</p>';
        $output .= '</div>';
    }
    $output .= '</div>';

    return $output;
}
add_shortcode('display_cart', 'display_cart_shortcode');


?>
